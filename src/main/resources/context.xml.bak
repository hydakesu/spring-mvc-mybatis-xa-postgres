<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns= "http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context= "http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd" >

	<context:component-scan base-package="com.demo.dao" />
	<context:component-scan base-package="com.demo.service" />
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/config.properties</value>
				<value>classpath:user/user.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Data source -->
    <bean id="abstractXADataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"/>
        <property name="poolSize" value="10" />
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <property name="borrowConnectionTimeout" value="60"/>
        <property name="reapTimeout" value="20"/>
        <property name="maxIdleTime" value="60"/>
        <property name="maintenanceInterval" value="60"/>
        <property name="loginTimeout" value="60"/>
        <property name="testQuery">
            <value>select 1</value>
        </property>
    </bean>
	
	<bean id="abstractXADataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"/>
        <property name="poolSize" value="10" />
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <property name="borrowConnectionTimeout" value="60"/>
        <property name="reapTimeout" value="20"/>
        <property name="maxIdleTime" value="60"/>
        <property name="maintenanceInterval" value="60"/>
        <property name="loginTimeout" value="60"/>
        <property name="testQuery">
            <value>select 1</value>
        </property>
    </bean>
    
	<bean id="dataSource1" parent="abstractXADataSource1">
		<property name="uniqueResourceName" value="dataSource_catalog" />
		<property name="xaProperties">
			<props>
				<prop key="user">${db1.username}</prop>
				<prop key="password">${db1.password}</prop>
				<prop key="serverName">${db1.serverName}</prop>
				<prop key="portNumber">${db1.portNumber}</prop>
				<prop key="databaseName">${db1.databaseName}</prop>
				<!--<prop key="pinGlobalTxToPhysicalConnection">true</prop> -->
			</props>
		</property>
	</bean>

	<bean id="dataSource2" parent="abstractXADataSource2">
		<property name="uniqueResourceName" value="dataSource_media" />
		<property name="xaProperties">
			<props>
				<prop key="user">${db2.username}</prop>
				<prop key="password">${db2.password}</prop>
				<prop key="serverName">${db2.serverName}</prop>
				<prop key="portNumber">${db2.portNumber}</prop>
				<prop key="databaseName">${db2.databaseName}</prop>
				<!-- <prop key="pinGlobalTxToPhysicalConnection">true</prop> -->
			</props>
		</property>
	</bean>
    
    <!-- Transaction Manager -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />

		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
	    <!-- <property name="configLocation" value="/WEB-INF/config/db/MyBatisConfiguration.xml" /> -->
	    <property name="mapperLocations"  value="classpath*:mapper/user/*.xml"/> 
        <property name="typeAliasesPackage" value="com.demo.user.domain" />
	</bean>
	
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
	    <!-- <property name="configLocation" value="/WEB-INF/config/db/MyBatisConfiguration.xml" /> -->
	    <property name="mapperLocations"  value="classpath*:mapper/config/*.xml"/> 
        <property name="typeAliasesPackage" value="com.demo.config.domain" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
	    <!-- <property name="basePackage" value="cms.sm.mapper" /> -->
	    <property name="basePackage" value="com.demo.user.dao" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
	    <!-- <property name="basePackage" value="cms.sm.mapper" /> -->
	    <property name="basePackage" value="com.demo.config.dao" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>
	
	<!-- 使用AOP来声明事务 -->
	<aop:config>
		<!-- 第一个* 代表返回值, 第二个代表子包下的子类, (..) 代表方法参数 -->
		<aop:pointcut expression="execution(* com.demo.service..*.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="read*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

</beans>
